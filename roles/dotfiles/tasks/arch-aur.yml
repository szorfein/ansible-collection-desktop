---
# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=xst
- name: aur > installing dependencies for {{ aur_item.name }}
  become: true
  community.general.pacman:
    name: '{{ aur_item.deps }}'
    extra_args: --needed

- name: aur > downloading the last snapshot
  ansible.builtin.get_url:
    url: 'https://aur.archlinux.org/cgit/aur.git/snapshot/{{ aur_item.name }}.tar.gz'
    dest: '{{ dotfiles_cache_dir }}/{{ aur_item.name }}.tar.gz'
    use_netrc: false
  register: aur_src

- name: aur > creating building directory
  ansible.builtin.file:
    path: '{{ dotfiles_cache_dir}}/build'
    state: directory
  when: aur_src.changed

- name: aur > uncompressing source
  ansible.builtin.command: >
    tar xvf ../{{ aur_item.name }}.tar.gz
    chdir={{ dotfiles_cache_dir}}/build
  when: aur_src.changed

- name: aur > building source
  ansible.builtin.command: >
    makepkg --nodeps --noconfirm
    chdir={{ dotfiles_cache_dir }}/build/{{ aur_item.name }}
  when: aur_src.changed

- name: aur > searching for building package '*.pkg.tar.zst'
  ansible.builtin.find:
    paths:
      - '{{ dotfiles_cache_dir }}/build/{{ aur_item.name }}'
    patterns:
      - '{{ aur_item.name }}-[0-9]*.pkg.tar.zst'
    file_type: file
  register: aur_pkg
  when: aur_src.changed

- name: aur > installing package {{ aur_item.name }}
  become: true
  community.general.pacman:
    name: '{{ aur_pkg.files[0].path }}'
    state: present
  when: aur_src.changed
