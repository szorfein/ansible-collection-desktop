---
# https://aur.archlinux.org/cgit/aur.git/tree/PKGBUILD?h=xst
- name: aur > installing dependencies for {{ aur_item.name }}
  become: true
  community.general.pacman:
    name: "{{ aur_item.deps }}"
    extra_args: --needed

- name: aur > checking snapshot {{ aur_item.name }}
  ansible.builtin.file:
    path: "~/.cache/reaver/archlinux/{{ aur_item.name }}.tar.gz"
    state: file

- name: aur > creating building directory
  ansible.builtin.file:
    path: "{{ web_browser_cache_dir}}/build"
    state: directory

- name: aur > removing older build...
  ansible.builtin.file:
    path: "{{ web_browser_cache_dir }}/build/{{ aur_item.name }}"
    state: absent

- name: aur > uncompressing source
  ansible.builtin.command: >
    tar xvf ~/.cache/reaver/archlinux/{{ aur_item.name }}.tar.gz
    chdir={{ web_browser_cache_dir}}/build

- name: aur > importing gpg key
  ansible.builtin.command: gpg --keyserver {{ aur_item.gpg_server }} --recv-keys {{ aur_item.gpg_key }}
  when: aur_item.gpg_key is defined and aur_item.gpg_server is defined

- name: aur > building source
  ansible.builtin.command: >
    makepkg --nodeps --noconfirm
    chdir={{ web_browser_cache_dir }}/build/{{ aur_item.name }}

- name: aur > searching for building package '*.pkg.tar.zst'
  ansible.builtin.find:
    paths:
      - "{{ web_browser_cache_dir }}/build/{{ aur_item.name }}"
    patterns:
      - "{{ aur_item.name }}*.pkg.tar.zst"
    file_type: file
  register: aur_pkg

- name: aur > installing package {{ aur_item.name }}
  become: true
  community.general.pacman:
    name: "{{ aur_pkg.files[0].path }}"
    state: present
